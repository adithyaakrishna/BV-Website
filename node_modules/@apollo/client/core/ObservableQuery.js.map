{"version":3,"file":"ObservableQuery.js","sources":["ObservableQuery.js"],"sourcesContent":["import { __assign, __extends } from \"tslib\";\nimport { invariant, InvariantError } from 'ts-invariant';\nimport { equal } from '@wry/equality';\nimport { cloneDeep } from '../utilities/common/cloneDeep';\nimport { getOperationDefinition } from '../utilities/graphql/getFromAST';\nimport { NetworkStatus, isNetworkRequestInFlight } from './networkStatus';\nimport { Observable } from '../utilities/observables/Observable';\nimport { iterateObserversSafely } from '../utilities/observables/iteration';\nimport { ApolloError } from '../errors/ApolloError';\nimport { isNonEmptyArray } from '../utilities/common/arrays';\nimport { Reobserver } from './Reobserver';\nexport var hasError = function (storeValue, policy) {\n    if (policy === void 0) { policy = 'none'; }\n    return storeValue && (storeValue.networkError ||\n        (policy === 'none' && isNonEmptyArray(storeValue.graphQLErrors)));\n};\nvar warnedAboutUpdateQuery = false;\nvar ObservableQuery = (function (_super) {\n    __extends(ObservableQuery, _super);\n    function ObservableQuery(_a) {\n        var queryManager = _a.queryManager, options = _a.options;\n        var _this = _super.call(this, function (observer) {\n            return _this.onSubscribe(observer);\n        }) || this;\n        _this.observers = new Set();\n        _this.subscriptions = new Set();\n        _this.observer = {\n            next: function (result) {\n                if (_this.lastError || _this.isDifferentFromLastResult(result)) {\n                    _this.updateLastResult(result);\n                    iterateObserversSafely(_this.observers, 'next', result);\n                }\n            },\n            error: function (error) {\n                _this.updateLastResult(__assign(__assign({}, _this.lastResult), { errors: error.graphQLErrors, networkStatus: NetworkStatus.error, loading: false }));\n                iterateObserversSafely(_this.observers, 'error', _this.lastError = error);\n            },\n        };\n        _this.isTornDown = false;\n        _this.options = options;\n        _this.queryId = queryManager.generateQueryId();\n        var opDef = getOperationDefinition(options.query);\n        _this.queryName = opDef && opDef.name && opDef.name.value;\n        _this.queryManager = queryManager;\n        return _this;\n    }\n    Object.defineProperty(ObservableQuery.prototype, \"variables\", {\n        get: function () {\n            return this.options.variables;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ObservableQuery.prototype.result = function () {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            var observer = {\n                next: function (result) {\n                    resolve(result);\n                    _this.observers.delete(observer);\n                    if (!_this.observers.size) {\n                        _this.queryManager.removeQuery(_this.queryId);\n                    }\n                    setTimeout(function () {\n                        subscription.unsubscribe();\n                    }, 0);\n                },\n                error: reject,\n            };\n            var subscription = _this.subscribe(observer);\n        });\n    };\n    ObservableQuery.prototype.getCurrentResult = function () {\n        var _a = this, lastResult = _a.lastResult, lastError = _a.lastError, fetchPolicy = _a.options.fetchPolicy;\n        var isNetworkFetchPolicy = fetchPolicy === 'network-only' ||\n            fetchPolicy === 'no-cache';\n        var networkStatus = lastError ? NetworkStatus.error :\n            lastResult ? lastResult.networkStatus :\n                isNetworkFetchPolicy ? NetworkStatus.loading :\n                    NetworkStatus.ready;\n        var result = {\n            data: !lastError && lastResult && lastResult.data || void 0,\n            error: lastError,\n            loading: isNetworkRequestInFlight(networkStatus),\n            networkStatus: networkStatus,\n        };\n        if (this.isTornDown) {\n            return result;\n        }\n        var _b = this.getCurrentQueryResult(), data = _b.data, partial = _b.partial;\n        Object.assign(result, { data: data, partial: partial });\n        var queryStoreValue = this.queryManager.getQueryStoreValue(this.queryId);\n        if (queryStoreValue) {\n            var networkStatus_1 = queryStoreValue.networkStatus;\n            if (hasError(queryStoreValue, this.options.errorPolicy)) {\n                return Object.assign(result, {\n                    data: void 0,\n                    networkStatus: networkStatus_1,\n                    error: new ApolloError({\n                        graphQLErrors: queryStoreValue.graphQLErrors,\n                        networkError: queryStoreValue.networkError,\n                    }),\n                });\n            }\n            if (queryStoreValue.variables) {\n                this.options.variables = __assign(__assign({}, this.options.variables), queryStoreValue.variables);\n            }\n            Object.assign(result, {\n                loading: isNetworkRequestInFlight(networkStatus_1),\n                networkStatus: networkStatus_1,\n            });\n            if (queryStoreValue.graphQLErrors && this.options.errorPolicy === 'all') {\n                result.errors = queryStoreValue.graphQLErrors;\n            }\n        }\n        if (partial) {\n            this.resetLastResults();\n        }\n        else {\n            this.updateLastResult(result);\n        }\n        return result;\n    };\n    ObservableQuery.prototype.isDifferentFromLastResult = function (newResult) {\n        return !equal(this.lastResultSnapshot, newResult);\n    };\n    ObservableQuery.prototype.getLastResult = function () {\n        return this.lastResult;\n    };\n    ObservableQuery.prototype.getLastError = function () {\n        return this.lastError;\n    };\n    ObservableQuery.prototype.resetLastResults = function () {\n        delete this.lastResult;\n        delete this.lastResultSnapshot;\n        delete this.lastError;\n        this.isTornDown = false;\n    };\n    ObservableQuery.prototype.resetQueryStoreErrors = function () {\n        var queryStore = this.queryManager.getQueryStoreValue(this.queryId);\n        if (queryStore) {\n            queryStore.networkError = undefined;\n            queryStore.graphQLErrors = [];\n        }\n    };\n    ObservableQuery.prototype.refetch = function (variables) {\n        var fetchPolicy = this.options.fetchPolicy;\n        if (fetchPolicy === 'cache-only') {\n            return Promise.reject(new InvariantError('cache-only fetchPolicy option should not be used together with query refetch.'));\n        }\n        if (fetchPolicy !== 'no-cache' &&\n            fetchPolicy !== 'cache-and-network') {\n            fetchPolicy = 'network-only';\n        }\n        if (variables && !equal(this.options.variables, variables)) {\n            this.options.variables = __assign(__assign({}, this.options.variables), variables);\n        }\n        return this.newReobserver(false).reobserve({\n            fetchPolicy: fetchPolicy,\n            variables: this.options.variables,\n            pollInterval: 0,\n        }, NetworkStatus.refetch);\n    };\n    ObservableQuery.prototype.fetchMore = function (fetchMoreOptions) {\n        var _this = this;\n        var combinedOptions = __assign(__assign({}, (fetchMoreOptions.query ? fetchMoreOptions : __assign(__assign(__assign({}, this.options), fetchMoreOptions), { variables: __assign(__assign({}, this.options.variables), fetchMoreOptions.variables) }))), { fetchPolicy: \"no-cache\" });\n        var qid = this.queryManager.generateQueryId();\n        if (combinedOptions.notifyOnNetworkStatusChange) {\n            var currentResult = this.getCurrentResult();\n            var queryInfo = this.queryManager.getQueryStoreValue(this.queryId);\n            if (queryInfo) {\n                queryInfo.networkStatus = NetworkStatus.fetchMore;\n            }\n            this.observer.next(__assign(__assign({}, currentResult), { loading: true, networkStatus: NetworkStatus.fetchMore }));\n        }\n        return this.queryManager.fetchQuery(qid, combinedOptions, NetworkStatus.fetchMore).then(function (fetchMoreResult) {\n            var data = fetchMoreResult.data;\n            var updateQuery = fetchMoreOptions.updateQuery;\n            if (updateQuery) {\n                if (process.env.NODE_ENV !== \"production\" &&\n                    !warnedAboutUpdateQuery) {\n                    invariant.warn(\"The updateQuery callback for fetchMore is deprecated, and will be removed\\nin the next major version of Apollo Client.\\n\\nPlease convert updateQuery functions to field policies with appropriate\\nread and merge functions, or use/adapt a helper function (such as\\nconcatPagination, offsetLimitPagination, or relayStylePagination) from\\n@apollo/client/utilities.\\n\\nThe field policy system handles pagination more effectively than a\\nhand-written updateQuery function, and you only need to define the policy\\nonce, rather than every time you call fetchMore.\");\n                    warnedAboutUpdateQuery = true;\n                }\n                _this.updateQuery(function (previous) { return updateQuery(previous, {\n                    fetchMoreResult: data,\n                    variables: combinedOptions.variables,\n                }); });\n            }\n            else {\n                _this.queryManager.cache.writeQuery({\n                    query: combinedOptions.query,\n                    variables: combinedOptions.variables,\n                    data: data,\n                });\n            }\n            return fetchMoreResult;\n        }).finally(function () {\n            _this.queryManager.stopQuery(qid);\n            _this.reobserve();\n        });\n    };\n    ObservableQuery.prototype.subscribeToMore = function (options) {\n        var _this = this;\n        var subscription = this.queryManager\n            .startGraphQLSubscription({\n            query: options.document,\n            variables: options.variables,\n            context: options.context,\n        })\n            .subscribe({\n            next: function (subscriptionData) {\n                var updateQuery = options.updateQuery;\n                if (updateQuery) {\n                    _this.updateQuery(function (previous, _a) {\n                        var variables = _a.variables;\n                        return updateQuery(previous, {\n                            subscriptionData: subscriptionData,\n                            variables: variables,\n                        });\n                    });\n                }\n            },\n            error: function (err) {\n                if (options.onError) {\n                    options.onError(err);\n                    return;\n                }\n                invariant.error('Unhandled GraphQL subscription error', err);\n            },\n        });\n        this.subscriptions.add(subscription);\n        return function () {\n            if (_this.subscriptions.delete(subscription)) {\n                subscription.unsubscribe();\n            }\n        };\n    };\n    ObservableQuery.prototype.setOptions = function (newOptions) {\n        return this.reobserve(newOptions);\n    };\n    ObservableQuery.prototype.setVariables = function (variables) {\n        if (equal(this.variables, variables)) {\n            return this.observers.size\n                ? this.result()\n                : Promise.resolve();\n        }\n        this.options.variables = variables;\n        if (!this.observers.size) {\n            return Promise.resolve();\n        }\n        var _a = this.options.fetchPolicy, fetchPolicy = _a === void 0 ? 'cache-first' : _a;\n        if (fetchPolicy !== 'cache-first' &&\n            fetchPolicy !== 'no-cache' &&\n            fetchPolicy !== 'network-only') {\n            fetchPolicy = 'cache-and-network';\n        }\n        return this.reobserve({\n            fetchPolicy: fetchPolicy,\n            variables: variables,\n        }, NetworkStatus.setVariables);\n    };\n    ObservableQuery.prototype.updateQuery = function (mapFn) {\n        var queryManager = this.queryManager;\n        var previousResult = this.getCurrentQueryResult(false).data;\n        var newResult = mapFn(previousResult, {\n            variables: this.variables,\n        });\n        if (newResult) {\n            queryManager.cache.writeQuery({\n                query: this.options.query,\n                data: newResult,\n                variables: this.variables,\n            });\n            queryManager.broadcastQueries();\n        }\n    };\n    ObservableQuery.prototype.getCurrentQueryResult = function (optimistic) {\n        var _a, _b;\n        if (optimistic === void 0) { optimistic = true; }\n        var fetchPolicy = this.options.fetchPolicy;\n        var lastData = (_a = this.lastResult) === null || _a === void 0 ? void 0 : _a.data;\n        if (fetchPolicy === 'no-cache' ||\n            fetchPolicy === 'network-only') {\n            return {\n                data: lastData,\n                partial: false,\n            };\n        }\n        var _c = this.queryManager.cache.diff({\n            query: this.options.query,\n            variables: this.variables,\n            previousResult: (_b = this.lastResult) === null || _b === void 0 ? void 0 : _b.data,\n            returnPartialData: true,\n            optimistic: optimistic,\n        }), result = _c.result, complete = _c.complete;\n        if (lastData &&\n            !this.lastError &&\n            this.queryManager.transform(this.options.query).hasForcedResolvers) {\n            result = lastData;\n        }\n        return {\n            data: (complete || this.options.returnPartialData) ? result : void 0,\n            partial: !complete,\n        };\n    };\n    ObservableQuery.prototype.startPolling = function (pollInterval) {\n        this.getReobserver().updateOptions({ pollInterval: pollInterval });\n    };\n    ObservableQuery.prototype.stopPolling = function () {\n        if (this.reobserver) {\n            this.reobserver.updateOptions({ pollInterval: 0 });\n        }\n    };\n    ObservableQuery.prototype.updateLastResult = function (newResult) {\n        var previousResult = this.lastResult;\n        this.lastResult = newResult;\n        this.lastResultSnapshot = this.queryManager.assumeImmutableResults\n            ? newResult\n            : cloneDeep(newResult);\n        if (!isNonEmptyArray(newResult.errors)) {\n            delete this.lastError;\n        }\n        return previousResult;\n    };\n    ObservableQuery.prototype.onSubscribe = function (observer) {\n        var _this = this;\n        if (observer === this.observer) {\n            return function () { };\n        }\n        try {\n            var subObserver = observer._subscription._observer;\n            if (subObserver && !subObserver.error) {\n                subObserver.error = defaultSubscriptionObserverErrorCallback;\n            }\n        }\n        catch (_a) { }\n        var first = !this.observers.size;\n        this.observers.add(observer);\n        if (this.lastError) {\n            observer.error && observer.error(this.lastError);\n        }\n        else if (this.lastResult) {\n            observer.next && observer.next(this.lastResult);\n        }\n        if (first) {\n            this.reobserve().catch(function (_) {\n            });\n        }\n        return function () {\n            if (_this.observers.delete(observer) && !_this.observers.size) {\n                _this.tearDownQuery();\n            }\n        };\n    };\n    ObservableQuery.prototype.getReobserver = function () {\n        return this.reobserver || (this.reobserver = this.newReobserver(true));\n    };\n    ObservableQuery.prototype.newReobserver = function (shareOptions) {\n        var _this = this;\n        var _a = this, queryManager = _a.queryManager, queryId = _a.queryId;\n        queryManager.setObservableQuery(this);\n        return new Reobserver(this.observer, shareOptions ? this.options : __assign({}, this.options), function (currentOptions, newNetworkStatus) {\n            queryManager.setObservableQuery(_this);\n            return queryManager.fetchQueryObservable(queryId, currentOptions, newNetworkStatus);\n        }, !queryManager.ssrMode && (function () { return !queryManager.checkInFlight(queryId); }));\n    };\n    ObservableQuery.prototype.reobserve = function (newOptions, newNetworkStatus) {\n        this.isTornDown = false;\n        return this.getReobserver().reobserve(newOptions, newNetworkStatus);\n    };\n    ObservableQuery.prototype.tearDownQuery = function () {\n        var queryManager = this.queryManager;\n        if (this.reobserver) {\n            this.reobserver.stop();\n            delete this.reobserver;\n        }\n        this.isTornDown = true;\n        this.subscriptions.forEach(function (sub) { return sub.unsubscribe(); });\n        this.subscriptions.clear();\n        queryManager.stopQuery(this.queryId);\n        this.observers.clear();\n    };\n    return ObservableQuery;\n}(Observable));\nexport { ObservableQuery };\nfunction defaultSubscriptionObserverErrorCallback(error) {\n    invariant.error('Unhandled error', error.message, error.stack);\n}\n//# sourceMappingURL=ObservableQuery.js.map"],"names":[],"mappings":"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"}